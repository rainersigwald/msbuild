trigger:
- master
- exp/*
- vs*

phases:
- phase: FullOnWindows
  displayName: "Build and test on Windows using full MSBuild"
  queue: 'Hosted VS2017'
  steps:
  - task: BatchScript@1
    displayName: VsDevCmd
    inputs:
      filename: 'C:\Program Files (x86)\Microsoft Visual Studio\2017\Enterprise\Common7\Tools\VsDevCmd.bat'
      modifyEnvironment: true
  - task: BatchScript@1
    displayName: cibuild.cmd
    inputs:
      filename: 'build/cibuild.cmd'
  - task: PublishTestResults@2
    displayName: Publish .NET Framework Test Results
    inputs:
      testRunTitle: 'Windows-on-full Full Framework'
      testRunner: XUnit
      testResultsFiles: 'artifacts/**/*UnitTests_net46*.xml'
      publishRunAttachments: true
      mergeTestResults: true
    condition: always()
  - task: PublishTestResults@2
    displayName: Publish .NET Core 2.1 Test Results
    inputs:
      testRunTitle: 'Windows-on-full .NET Core 2.1'
      testRunner: XUnit
      testResultsFiles: 'artifacts/**/*UnitTests_netcoreapp2.1*.xml'
      publishRunAttachments: true
      mergeTestResults: true
    condition: always()

- phase: CoreOnWindows
  displayName: "Build and test on Windows using .NET Core MSBuild"
  queue: 'Hosted VS2017'
  steps:
  - task: BatchScript@1
    displayName: VsDevCmd
    inputs:
      filename: 'C:\Program Files (x86)\Microsoft Visual Studio\2017\Enterprise\Common7\Tools\VsDevCmd.bat'
      modifyEnvironment: true
  - task: BatchScript@1
    displayName: cibuild.cmd
    inputs:
      filename: 'build/cibuild.cmd'
      arguments: '-hostType Core'
  - task: PublishTestResults@2
    displayName: Publish .NET Framework Test Results
    inputs:
      testRunTitle: 'Windows-on-core Full Framework'
      testRunner: XUnit
      testResultsFiles: 'artifacts/**/*UnitTests_net46*.xml'
      publishRunAttachments: true
      mergeTestResults: true
    condition: always()
  - task: PublishTestResults@2
    displayName: Publish .NET Core 2.1 Test Results
    inputs:
      testRunTitle: 'Windows-on-core .NET Core 2.1'
      testRunner: XUnit
      testResultsFiles: 'artifacts/**/*UnitTests_netcoreapp2.1*.xml'
      publishRunAttachments: true
      mergeTestResults: true
    condition: always()

- phase: CoreOnLinux
  displayName: "Build and test on Linux using .NET Core MSBuild"
  queue: Hosted Linux Preview
  steps:
  - bash: . 'build/cibuild.sh'
    displayName: CI Build
  - task: PublishTestResults@2
    displayName: Publish .NET Core 2.1 Test Results
    inputs:
      testRunTitle: 'Linux .NET Core 2.1'
      testRunner: XUnit
      testResultsFiles: 'artifacts/**/*UnitTests_netcoreapp2.1*.xml'
      publishRunAttachments: true
      mergeTestResults: true
    condition: always()


- phase: CoreOnMac
  displayName: "Build and test on macOS using .NET Core MSBuild"
  queue: 'Hosted macOS Preview'
  steps:
  - bash: . 'build/cibuild.sh'
    displayName: CI Build
  - task: PublishTestResults@2
    displayName: Publish .NET Core 2.1 Test Results
    inputs:
      testRunTitle: 'macOS .NET Core 2.1'
      testRunner: XUnit
      testResultsFiles: 'artifacts/**/*UnitTests_netcoreapp2.1*.xml'
      publishRunAttachments: true
      mergeTestResults: true
    condition: always()
